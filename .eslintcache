[{"C:\\Users\\Ali\\Desktop\\draft-test\\src\\index.js":"1","C:\\Users\\Ali\\Desktop\\draft-test\\src\\reportWebVitals.js":"2","C:\\Users\\Ali\\Desktop\\draft-test\\src\\App.js":"3","C:\\Users\\Ali\\Desktop\\draft-test\\src\\DraftEditor.js":"4","C:\\Users\\Ali\\Desktop\\draft-test\\src\\components\\App\\index.js":"5","C:\\Users\\Ali\\Desktop\\draft-test\\src\\components\\App\\App.js":"6","C:\\Users\\Ali\\Desktop\\draft-test\\src\\components\\DraftEditor\\DraftEditor.js":"7","C:\\Users\\Ali\\Desktop\\draft-test\\src\\utils\\index.js":"8","C:\\Users\\Ali\\Desktop\\draft-test\\src\\components\\DraftEditor\\exporter.js":"9","C:\\Users\\Ali\\Desktop\\draft-test\\src\\components\\index.js":"10","C:\\Users\\Ali\\Desktop\\draft-test\\src\\components\\DraftEditor\\index.js":"11","C:\\Users\\Ali\\Desktop\\draft-test\\src\\components\\Slider\\ContentSlider.js":"12","C:\\Users\\Ali\\Desktop\\draft-test\\src\\components\\Slider\\EditorSlider.js":"13","C:\\Users\\Ali\\Desktop\\draft-test\\src\\components\\InlineToolbar\\InlineToolbar.js":"14"},{"size":500,"mtime":1607011664128,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"16"},{"size":600,"mtime":1607006010945,"results":"18","hashOfConfig":"16"},{"size":4434,"mtime":1607033844936,"results":"19","hashOfConfig":"16"},{"size":49,"mtime":1607007872562,"results":"20","hashOfConfig":"16"},{"size":966,"mtime":1607009783798,"results":"21","hashOfConfig":"16"},{"size":8068,"mtime":1607010757651,"results":"22","hashOfConfig":"16"},{"size":3130,"mtime":1607007896551,"results":"23","hashOfConfig":"16"},{"size":1263,"mtime":1607010739575,"results":"24","hashOfConfig":"16"},{"size":286,"mtime":1607008523713,"results":"25","hashOfConfig":"16"},{"size":73,"mtime":1607007872586,"results":"26","hashOfConfig":"16"},{"size":2637,"mtime":1607011269040,"results":"27","hashOfConfig":"16"},{"size":10351,"mtime":1607010811213,"results":"28","hashOfConfig":"16"},{"size":1113,"mtime":1607033981581,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"5uzw8x",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},"C:\\Users\\Ali\\Desktop\\draft-test\\src\\index.js",[],["63","64"],"C:\\Users\\Ali\\Desktop\\draft-test\\src\\reportWebVitals.js",[],"C:\\Users\\Ali\\Desktop\\draft-test\\src\\App.js",["65"],"import logo from './logo.svg';\nimport './App.css';\nimport DraftEditor from './DraftEditor';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header> */}\n      <DraftEditor />\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Ali\\Desktop\\draft-test\\src\\DraftEditor.js",[],"C:\\Users\\Ali\\Desktop\\draft-test\\src\\components\\App\\index.js",[],["66","67"],"C:\\Users\\Ali\\Desktop\\draft-test\\src\\components\\App\\App.js",[],"C:\\Users\\Ali\\Desktop\\draft-test\\src\\components\\DraftEditor\\DraftEditor.js",[],"C:\\Users\\Ali\\Desktop\\draft-test\\src\\utils\\index.js",[],"C:\\Users\\Ali\\Desktop\\draft-test\\src\\components\\DraftEditor\\exporter.js",[],"C:\\Users\\Ali\\Desktop\\draft-test\\src\\components\\index.js",[],"C:\\Users\\Ali\\Desktop\\draft-test\\src\\components\\DraftEditor\\index.js",[],"C:\\Users\\Ali\\Desktop\\draft-test\\src\\components\\Slider\\ContentSlider.js",["68","69"],"C:\\Users\\Ali\\Desktop\\draft-test\\src\\components\\Slider\\EditorSlider.js",["70","71","72","73","74","75"],"import './Slider.styl';\r\n\r\nimport React, {\r\n  Component,\r\n} from 'react';\r\n\r\nimport Type from 'prop-types';\r\n\r\nimport _without from 'lodash/without';\r\nimport _concat from 'lodash/concat';\r\nimport _map from 'lodash/map';\r\nimport _times from 'lodash/times';\r\n\r\nimport { Map } from 'immutable';\r\n\r\nimport {\r\n  EditorBlock,\r\n  EditorState,\r\n  SelectionState,\r\n  Modifier\r\n} from 'draft-js';\r\n\r\nimport {\r\n  SortableContainer,\r\n  SortableElement,\r\n  arrayMove\r\n} from 'react-sortable-hoc';\r\n/* \r\nimport {\r\n  addNewBlockAt\r\n} from '../../utils/index'; */\r\n\r\nimport IconBack from 'material-ui/svg-icons/hardware/keyboard-backspace';\r\nimport IconClose from 'material-ui/svg-icons/navigation/close';\r\nimport IconSettings from 'material-ui/svg-icons/action/settings';\r\n\r\nimport Dropzone from 'react-dropzone';\r\n\r\nconst urlCreator = window.URL || window.webkitURL;\r\n\r\nexport default class EditorSlider extends Component {\r\n  /**\r\n   * Validates passed properties\r\n   */\r\n  static propTypes = {\r\n    block: Type.object,\r\n    blockProps: Type.object\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.editorContainerWidth = 578;\r\n\r\n    this.slideBack = this.slideBack;\r\n    this.slideForward = this.slideForward;\r\n    this.remove = this.remove;\r\n    this.onAddingSlide = this.onAddingSlide;\r\n    this.onSettingsIconClick = this.onSettingsIconClick;\r\n    this.closeSettings = this.closeSettings;\r\n\r\n    this.onChange = this.props.blockProps.setEditorState;\r\n\r\n    this.state = {\r\n      activeSlideIndex: 0,\r\n      filesLoaded: false,\r\n      displaySettings: false,\r\n      slidesPreview: []\r\n    };\r\n  }\r\n\r\n  onAddingSlide(files) {\r\n    this.setState({\r\n      filesLoaded: false,\r\n      slidesPreview: _concat(this.state.slidesPreview, _map(files, file => urlCreator.createObjectURL(file)))\r\n    });\r\n  }\r\n\r\n  onSettingsIconClick() {\r\n    this.setState({ displaySettings: true });\r\n    const data = this.props.block.getData();\r\n    const slides = data.get('slides');\r\n\r\n    this.setState({\r\n      activeSlideIndex: 0,\r\n      displaySettings: true,\r\n      slidesPreview: slides.map(slide => slide.url)\r\n    });\r\n  }\r\n\r\n  onSortEnd = ({ oldIndex, newIndex }) => {\r\n    this.setState({\r\n      slidesPreview: arrayMove(this.state.slidesPreview, oldIndex, newIndex)\r\n    });\r\n  };\r\n\r\n  setActiveIndex(activeSlideIndex) {\r\n    this.setState({\r\n      activeSlideIndex\r\n    });\r\n  }\r\n\r\n  remove() {\r\n    const editorState = this.props.blockProps.getEditorState();\r\n    const selection = editorState.getSelection();\r\n    const content = editorState.getCurrentContent();\r\n    const keyAfter = content.getKeyAfter(this.props.block.key);\r\n    const keyBefore = content.getKeyBefore(this.props.block.key);\r\n    const blockMap = content.getBlockMap().delete(this.props.block.key);\r\n\r\n    const withoutAtomicBlock = content.merge({\r\n      blockMap, selectionAfter: selection\r\n    });\r\n\r\n    const newState = EditorState.push(\r\n      editorState, withoutAtomicBlock, 'remove-range'\r\n    );\r\n\r\n    const newSelection = new SelectionState({\r\n      anchorKey: keyAfter || keyBefore || 0,\r\n      anchorOffset: 0,\r\n      focusKey: keyAfter || keyBefore || 0,\r\n      focusOffset: 0\r\n    });\r\n\r\n    const newEditorState = EditorState.forceSelection(newState, newSelection);\r\n\r\n    this.onChange(newEditorState);\r\n  }\r\n\r\n  removeSlide(removedSlideIndex) {\r\n    const currentSlidesPreview = this.state.slidesPreview.slice();\r\n    const removedSlide = currentSlidesPreview[removedSlideIndex];\r\n\r\n    setTimeout(() => {\r\n      this.setState({\r\n        slidesPreview: _without(currentSlidesPreview, removedSlide)\r\n      });\r\n    }, 0);\r\n  }\r\n\r\n  slideBack() {\r\n    if (this.state.displaySettings) {\r\n      return;\r\n    }\r\n\r\n    const data = this.props.block.getData();\r\n    const slides = data.get('slides');\r\n    const slidesLength = slides.length;\r\n    const { activeSlideIndex } = this.state;\r\n\r\n    const newActiveIndex = (activeSlideIndex + slidesLength - 1) % slidesLength;\r\n\r\n    this.setActiveIndex(newActiveIndex);\r\n  }\r\n\r\n  slideForward() {\r\n    if (this.state.displaySettings) {\r\n      return;\r\n    }\r\n\r\n    const data = this.props.block.getData();\r\n    const slides = data.get('slides');\r\n    const slidesLength = slides.length;\r\n    const { activeSlideIndex } = this.state;\r\n\r\n    const newActiveIndex = (activeSlideIndex + slidesLength + 1) % slidesLength;\r\n\r\n    this.setActiveIndex(newActiveIndex);\r\n  }\r\n\r\n  updateData(data) {\r\n    const editorState = this.props.blockProps.getEditorState();\r\n    const content = editorState.getCurrentContent();\r\n\r\n    const selection = new SelectionState({\r\n      anchorKey: this.props.block.key,\r\n      anchorOffset: 0,\r\n      focusKey: this.props.block.key,\r\n      focusOffset: this.props.block.getLength()\r\n    });\r\n\r\n    const newContentState = Modifier.mergeBlockData(content, selection, data);\r\n    const newEditorState = EditorState.push(editorState, newContentState);\r\n\r\n    setTimeout(() => this.props.blockProps.setEditorState(newEditorState));\r\n  }\r\n\r\n  closeSettings() {\r\n    this.setState({ displaySettings: false });\r\n\r\n    const slides = this.state.slidesPreview.slice().map(url => ({ url }));\r\n\r\n    this.updateData(new Map({ slides }));\r\n  }\r\n\r\n  /**\r\n   * Renders 'EditorSlider' component\r\n   */\r\n  render() {\r\n    const {\r\n      activeSlideIndex,\r\n      displaySettings,\r\n      slidesPreview\r\n    } = this.state;\r\n\r\n    const SortableItem = new SortableElement(({ value, itemsLength }) => (\r\n      <div className=\"slide-preview-wrapper\">\r\n        <img\r\n          style={{ width: this.editorContainerWidth / itemsLength }}\r\n          className=\"slide-preview-image\"\r\n          src={value}\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n    ));\r\n\r\n    const SortableList = new SortableContainer(({ items }) => (\r\n      <ul className=\"slides\">\r\n        {items.map((value, index) =>\r\n          <SortableItem\r\n            key={`item-${ index }`}\r\n            index={index}\r\n            itemIndex={index}\r\n            itemsLength={items.length}\r\n            value={value}\r\n          />\r\n        )}\r\n      </ul>\r\n    ));\r\n\r\n    const slides = this.props.block.getData().get('slides');\r\n\r\n    return (\r\n      <div className=\"c-image-slider\">\r\n        {\r\n          (!displaySettings && slides && slides.length) ?\r\n            <IconSettings\r\n              className=\"icon icon-settings\"\r\n              onClick={this.onSettingsIconClick}\r\n            /> : null\r\n\r\n        }\r\n        {\r\n          (!displaySettings && slides && slides.length) ?\r\n            <IconClose\r\n              className=\"icon icon-close\"\r\n              onClick={this.remove}\r\n            /> : null\r\n        }\r\n        {\r\n          (slides && !!slides.length) &&\r\n            <div>\r\n              <div className=\"slides-container\">\r\n                <div\r\n                  className=\"slides\"\r\n                  style={{ left: `-${ activeSlideIndex * 100 }%` }}\r\n                >\r\n                  {\r\n                    displaySettings &&\r\n                      <div className=\"settings-container\">\r\n                        {\r\n                          <IconBack\r\n                            className=\"icon icon-close\"\r\n                            onClick={this.closeSettings}\r\n                          />\r\n                        }\r\n                        <div className=\"slides-preview-container\">\r\n                          <div className=\"slides-preview-inner\">\r\n                            <div className=\"settings-title\">\r\n                              Change order, delete or\r\n                              <Dropzone\r\n                                accept=\"image/*\"\r\n                                style={{ display: 'inline' }}\r\n                                onDrop={this.onAddingSlide}\r\n                              >\r\n                                &nbsp;<span className=\"accent\">add</span>&nbsp;\r\n                              </Dropzone>\r\n                              slides\r\n                            </div>\r\n                            <div style={{ position: 'relative' }}>\r\n                              <SortableList\r\n                                items={slidesPreview}\r\n                                onSortEnd={this.onSortEnd.bind(this)}\r\n                                helperClass=\"g-sortable-helper\"\r\n                                axis=\"x\"\r\n                              />\r\n                              {\r\n                                slidesPreview.length > 2 && _times(slidesPreview.length).map(index => (\r\n                                  <IconClose\r\n                                    style={{ top: 0, left: index * (this.editorContainerWidth / slidesPreview.length) }}\r\n                                    key={index}\r\n                                    className=\"icon icon-close\"\r\n                                    onClick={this.removeSlide.bind(this, index)}\r\n                                  />\r\n                                ))\r\n                              }\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                  }\r\n                  {\r\n                    slides.map((slide, index) => (\r\n                      <div\r\n                        key={index}\r\n                        className=\"slide\"\r\n                      >\r\n                        <div className=\"slide-inner\">\r\n                          <img src={slide.url} alt=\"\" />\r\n                        </div>\r\n                      </div>\r\n                    ))\r\n                  }\r\n                </div>\r\n                <div\r\n                  className=\"arrow left\"\r\n                  onClick={this.slideBack}\r\n                >\r\n                  <div className=\"chevron-arrow-left\" />\r\n                </div>\r\n                <div\r\n                  className=\"arrow right\"\r\n                  onClick={this.slideForward}\r\n                >\r\n                  <div className=\"chevron-arrow-right\" />\r\n                </div>\r\n              </div>\r\n              <div className=\"slider-footer\">\r\n                <div className=\"slides-text-container\">\r\n                  <div\r\n                    className=\"slide-text\"\r\n                  >\r\n                    <EditorBlock {...this.props} />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n","C:\\Users\\Ali\\Desktop\\draft-test\\src\\components\\InlineToolbar\\InlineToolbar.js",["76","77"],"import React from 'react';\r\n\r\nimport './InlineToolbar.css';\r\n\r\nimport IconLink from 'material-ui/svg-icons/content/link';\r\n\r\nconst INLINE_STYLES = [\r\n  { label: 'B', style: 'BOLD' },\r\n  { label: 'I', style: 'ITALIC' },\r\n  { label: 'H', style: 'HIGHLIGHT' }\r\n];\r\n\r\nexport default ({ editorState, onToggle, position, setLink }) => {\r\n  const currentStyle = editorState.getCurrentInlineStyle();\r\n\r\n  return (\r\n    <div\r\n      className=\"toolbar\"\r\n      style={position}\r\n    >\r\n      <ul className=\"toolbar-items\">\r\n        {INLINE_STYLES.map(type =>\r\n          <li\r\n            key={type.label}\r\n            className={`toolbar-item ${ type.style.toLowerCase() } ${ currentStyle.has(type.style) ? 'active' : '' }`}\r\n            onMouseDown={(e) => {\r\n              e.preventDefault();\r\n              onToggle(type.style);\r\n            }}\r\n          >\r\n            {type.label}\r\n          </li>\r\n        )}\r\n        <li\r\n          key=\"add-link-button\"\r\n          className=\"toolbar-item\"\r\n          onMouseDown={setLink}\r\n        >\r\n          {/* <IconLink /> */}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n",{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":1,"column":8,"nodeType":"84","messageId":"85","endLine":1,"endColumn":12},{"ruleId":"78","replacedBy":"86"},{"ruleId":"80","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":19,"column":22,"nodeType":"90","messageId":"91","endLine":19,"endColumn":36},{"ruleId":"88","severity":1,"message":"92","line":20,"column":25,"nodeType":"90","messageId":"91","endLine":20,"endColumn":42},{"ruleId":"88","severity":1,"message":"89","line":55,"column":22,"nodeType":"90","messageId":"91","endLine":55,"endColumn":36},{"ruleId":"88","severity":1,"message":"92","line":56,"column":25,"nodeType":"90","messageId":"91","endLine":56,"endColumn":42},{"ruleId":"88","severity":1,"message":"93","line":57,"column":19,"nodeType":"90","messageId":"91","endLine":57,"endColumn":30},{"ruleId":"88","severity":1,"message":"94","line":58,"column":26,"nodeType":"90","messageId":"91","endLine":58,"endColumn":44},{"ruleId":"88","severity":1,"message":"95","line":59,"column":32,"nodeType":"90","messageId":"91","endLine":59,"endColumn":56},{"ruleId":"88","severity":1,"message":"96","line":60,"column":26,"nodeType":"90","messageId":"91","endLine":60,"endColumn":44},{"ruleId":"82","severity":1,"message":"97","line":5,"column":8,"nodeType":"84","messageId":"85","endLine":5,"endColumn":16},{"ruleId":"98","severity":1,"message":"99","line":13,"column":1,"nodeType":"100","endLine":44,"endColumn":3},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar",["101"],["102"],"no-self-assign","'this.slideBack' is assigned to itself.","MemberExpression","selfAssignment","'this.slideForward' is assigned to itself.","'this.remove' is assigned to itself.","'this.onAddingSlide' is assigned to itself.","'this.onSettingsIconClick' is assigned to itself.","'this.closeSettings' is assigned to itself.","'IconLink' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]